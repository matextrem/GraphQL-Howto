{"ast":null,"code":"import _classCallCheck from \"/Users/matidastugue/Projects/GraphQL-Howto/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matidastugue/Projects/GraphQL-Howto/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matidastugue/Projects/GraphQL-Howto/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matidastugue/Projects/GraphQL-Howto/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matidastugue/Projects/GraphQL-Howto/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matidastugue/Projects/GraphQL-Howto/client/src/components/LinkList.js\";\nimport React, { Component } from 'react';\nimport Link from './Link';\nimport { Query } from 'react-apollo';\nimport { FEED_QUERY } from '../utils/queries';\n\nvar LinkList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LinkList, _Component);\n\n  function LinkList() {\n    _classCallCheck(this, LinkList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LinkList).apply(this, arguments));\n  }\n\n  _createClass(LinkList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Query, {\n        query: FEED_QUERY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        if (loading) return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, \"Fetching\");\n        if (error) return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, \"Error\");\n        console.log('DATAA', data.feed.links);\n        var linksToRender = data.feed.links;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, linksToRender.map(function (link) {\n          return React.createElement(Link, {\n            key: link.id,\n            link: link,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          });\n        }));\n      });\n    }\n  }]);\n\n  return LinkList;\n}(Component);\n\nexport default LinkList;","map":{"version":3,"sources":["/Users/matidastugue/Projects/GraphQL-Howto/client/src/components/LinkList.js"],"names":["React","Component","Link","Query","FEED_QUERY","LinkList","loading","error","data","console","log","feed","links","linksToRender","map","link","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;IAEMC,Q;;;;;;;;;;;;;6BACK;AACP,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAED,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAA8B;AAAA,YAA3BE,OAA2B,QAA3BA,OAA2B;AAAA,YAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,YAAXC,IAAW,QAAXA,IAAW;AAC7B,YAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACb,YAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACXE,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAAI,CAACG,IAAL,CAAUC,KAA/B;AACA,YAAMC,aAAa,GAAGL,IAAI,CAACG,IAAL,CAAUC,KAAhC;AAEA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,aAAa,CAACC,GAAd,CAAkB,UAAAC,IAAI;AAAA,iBACrB,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,YAAA,IAAI,EAAED,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADqB;AAAA,SAAtB,CADH,CADF;AAOD,OAdH,CADF;AAkBD;;;;EApBoBd,S;;AAuBvB,eAAeI,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Link from './Link';\nimport { Query } from 'react-apollo';\nimport { FEED_QUERY } from '../utils/queries';\n\nclass LinkList extends Component {\n  render() {\n    return (\n      <Query query={FEED_QUERY}>\n        {({ loading, error, data }) => {\n          if (loading) return <div>Fetching</div>;\n          if (error) return <div>Error</div>;\n          console.log('DATAA', data.feed.links);\n          const linksToRender = data.feed.links;\n\n          return (\n            <div>\n              {linksToRender.map(link => (\n                <Link key={link.id} link={link} />\n              ))}\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default LinkList;\n"]},"metadata":{},"sourceType":"module"}